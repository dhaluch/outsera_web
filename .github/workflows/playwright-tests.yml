# Workflow para executar testes Playwright e publicar relatórios como artifacts
# Não gera PDF nem executa scripts de geração de PDF
name: Playwright Tests

on:
  push:
    branches: [main, test-login]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Run Playwright tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          # Versão do Node utilizada no projeto (ajuste se necessário)
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        # Instala navegadores e dependências necessárias
        run: npx playwright install --with-deps

      - name: Run Playwright tests (HTML + JUnit)
        id: playwright_test
        # Executa os testes e gera relatório HTML e JUnit (JUnit em results/junit.xml)
        run: |
          npx playwright test --reporter=html --reporter=junit=results/junit.xml
        # continua mesmo em caso de falha para garantir upload dos relatórios
        continue-on-error: true

      - name: Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report

      - name: Upload JUnit results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-results
          path: results

      - name: Upload test-results (traces/screenshots)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results

# Observações:
# - Os artifacts poderão ser baixados na aba 'Actions' > executar workflow > 'Artifacts'.
# - Não há etapa para gerar PDF; removi qualquer chamada a scripts .github/scripts/*.js.
# - Caso precise executar em outra branch além de main, adicione a branch ao gatilho 'branches' acima.

